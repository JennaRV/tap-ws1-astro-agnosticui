---
// Style Imports
import '../styles/global.css';
import '@fontsource/source-sans-pro';
import '@fontsource/pixelify-sans';
import '@fontsource/ibm-plex-mono';
import '@fontsource/work-sans';
import '@fontsource/cormorant-garamond';
import '@fontsource/spectral';
import '@fontsource/crimson-pro';
import '@fontsource/alfa-slab-one';

// common.min.css is distributed with agnostic-react
// and agnostic-svelte too. But, since we're using all
// of these together, we only need to import global CSS
// once and in one place.
// common.min.css combines properties, resets, utilities
// import "agnostic-vue/dist/common.min.css";
// But!! Rob much prefers individual modular import ;)
import "agnostic-vue/dist/common.properties.min.css";
import "agnostic-vue/dist/common.resets.min.css";
import "agnostic-vue/dist/common.utilities.min.css";
import "agnostic-vue/dist/opinions.min.css";


// Component Imports
import "agnostic-vue/dist/index.css";
import TAPHeader from '../components/TAPHeader.vue';
import TAPFooter from '../components/TAPFooter.vue';

// Component Script:
// You can write any JavaScript/TypeScript that you'd like here.
// It will run during the build, but never in the browser.
// All variables are available to use in the HTML template below.
let title = `${Astro.props.title} - GGC Technology Ambassadors Program`;
let bodyClass = Astro.props.class;

---
<html lang="en">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width">
	<title>{title}</title>

	<link rel="icon" type="image/x-icon" href="/favicon.ico" />

	<!-- Google tag (gtag.js) -->
	<script type="text/partytown" async src="https://www.googletagmanager.com/gtag/js?id=G-L6HGVGHGF3"></script>
	<script type="text/partytown">
	window.dataLayer = window.dataLayer || [];
	function gtag(){dataLayer.push(arguments);}
	gtag('js', new Date());

	gtag('config', 'G-L6HGVGHGF3');
	</script>

	<style>
		
	.banner-text-overlay h4{
		font-family: 'Gagalin', Helvetica, Arial, sans-serif;
		padding-bottom: 10rem;
		padding-left: 5rem;
	} 
	.banner-text-overlay p {
  		/* margin: 0; */
  		padding-bottom: 8.5rem;
 		padding-left: 5rem;	}

	</style>
</head>

<body class={bodyClass}>
	<TAPHeader client:load />
	<section class="homepg-banner">
		<img id="home-banner" src="" alt="TAP Gallery" style="max-width: 100%; height: auto;" />
		<div class="banner-text-overlay">
			<h4 id="photoTitle" class="banner-text-overlay">Title Here</h4>
			<p id="caption">caption here.</p>
		</div>
			<a id="prev" class="prev">&#10094;</a>
			<a id="next" class="next">&#10095;</a>
	  </section>
	  
	<main>
        <slot/>
	</main>
	<!-- <section class="banner">
		<h2> About TAP </h2>
	</section> -->

	<TAPFooter client:load />

</body>
</html>
<script>
	const gallery = [
	  {
		file: 'public/images/homepg-gallery/tap-homepage-banner.jpg',
		photoTitle: 'TECHNOLOGY AMBASSADORS PROGRAM',
		caption: 'Georgia Gwinnett College'
	  },
	  {
		file: 'public/images/homepg-gallery/tap-homepage-banner-2.jpg',
		photoTitle: 'TECHNOLOGY AMBASSADORS PROGRAM',
		caption: 'Georgia Gwinnett College'
	  },
	  {
		file: 'public/images/homepg-gallery/tap-homepage-banner-3.jpg',
		photoTitle: 'TECHNOLOGY AMBASSADORS PROGRAM',
		caption: 'Georgia Gwinnett College'
	  }
	];
	
	let cIndex = 0;
  
	const homeBanner = document.getElementById('home-banner');
	const photoTitle = document.getElementById('photoTitle');
	const caption = document.getElementById('caption');
	const prevArrow = document.getElementById('prev');
	const nxtArrow = document.getElementById('next');
  
	function updateGallery(index) {
	  const photo = gallery[index]; 
	  homeBanner.src = photo.file;
	  photoTitle.textContent = photo.photoTitle;
	  caption.textContent = photo.caption;
  
	}
  
	prevArrow.addEventListener('click', () => {
	  if (cIndex > 0) {
		cIndex--;
	  }
	  else cIndex = gallery.length -1;
	  updateGallery(cIndex);

	});
  
	nxtArrow.addEventListener('click', () => {
	  if (cIndex < gallery.length - 1) {
		cIndex++;
	  }
	  else cIndex = 0;
	  updateGallery(cIndex);

	});
  
	window.onload = () => {
	  if (gallery.length > 0) {
		updateGallery(cIndex);
	   } 
	};
  </script>
  
</script>
